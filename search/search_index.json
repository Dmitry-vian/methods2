{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041f\u0440\u043e\u0435\u043a\u0442 methods","text":"<p>\u0410\u0432\u0442\u043e\u0440: \u041c\u0438\u0445\u0430\u043b\u043a\u0438\u043d \u0414\u043c\u0438\u0442\u0440\u0438\u0439</p> <p>\u0417\u0430\u0434\u0430\u0447\u0430: \u041d\u0430\u043f\u0438\u0441\u0430\u0442\u044c 2 \u043c\u0435\u0442\u043e\u0434\u0430 API \u0438 \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u0445.</p> <p>\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043c\u043e\u0436\u043d\u043e \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0430:</p> <p>Directory Tree</p> <pre>methods\n\u251c\u2500\u2500apps\n\u2502   \u251c\u2500\u2500migrations\n\u2502   \u2502   \u251c\u2500\u25000001_initial.py\n\u2502   \u2502   \u2514\u2500\u2500init.py\n\u2502   \u251c\u2500\u2500init.py\n\u2502   \u251c\u2500\u2500admin.py\n\u2502   \u251c\u2500\u2500apps.py\n\u2502   \u251c\u2500\u2500models.py\n\u2502   \u251c\u2500\u2500serializers.py\n\u2502   \u251c\u2500\u2500tests.py\n\u2502   \u251c\u2500\u2500urls.py\n\u2502   \u2514\u2500\u2500views.py\n\u2514\u2500\u2500methods\n    \u251c\u2500\u2500init.py\n    \u251c\u2500\u2500asgi.py\n    \u251c\u2500\u2500settings.py\n    \u251c\u2500\u2500urls.py\n    \u2514\u2500\u2500wsgi.py</pre>"},{"location":"#_1","title":"\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434:","text":""},{"location":"#settings-methods","title":"\u0424\u0430\u0439\u043b settings \u043f\u0440\u043e\u0435\u043a\u0442\u0430 methods","text":"settings.py<pre><code>INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'apps',\n    'django_extensions',\n    'rest_framework',\n    'markdown',\n]\n</code></pre>"},{"location":"#urls-methods","title":"\u0424\u0430\u0439\u043b urls \u043f\u0440\u043e\u0435\u043a\u0442\u0430 methods","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c URL-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.</p> <p>\u042d\u0442\u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0434\u043b\u044f \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 URL-\u0430\u0434\u0440\u0435\u0441\u0430 \u0438\u0437 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f APPS. \u0412\u0441\u0435 URL-\u0430\u0434\u0440\u0435\u0441\u0430, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 APPS, \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441 '/apps/'.</p> urls.py<pre><code>from django.urls import path, include\nurlpatterns = [\n    path('apps/', include('apps.urls')),\n]\n</code></pre>"},{"location":"page2/","title":"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 apps","text":"<p>\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 apps</p>"},{"location":"page2/#_1","title":"\u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434","text":""},{"location":"page2/#apps_1","title":"\u0424\u0430\u0439\u043b apps \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<p>\u041a\u043b\u0430\u0441\u0441 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f 'apps'. \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0435 \u0430\u0432\u0442\u043e\u0438\u043d\u043a\u0440\u0435\u043c\u0435\u043d\u0442\u0430 \u0438 \u0438\u043c\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p> apps.py<pre><code>from django.apps import AppConfig\n\n\nclass AppsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps'\n</code></pre>"},{"location":"page2/#models","title":"\u0424\u0430\u0439\u043b models \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<pre><code>\u041c\u043e\u0434\u0435\u043b\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b ifconfig \u0438 touchfile.\n\n\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b:\n    command (CharField): \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b.\n    name (CharField): \u0418\u043c\u044f \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430.\n    output (TextField): \u0422\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b.\n</code></pre> models.py<pre><code>from django.db import models\n\n\nclass CommandsResult(models.Model):\n    command = models.CharField(max_length=255)\n    name = models.CharField(max_length=255)\n    output = models.TextField()\n</code></pre>"},{"location":"page2/#serializers","title":"\u0424\u0430\u0439\u043b serializers \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<pre><code>\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Ifconfig.\n\n\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043c\u043e\u0434\u0435\u043b\u0438 CommandResult \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b\u0439 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0432 \u0432\u0438\u0434\u0435 JSON.\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u0445.\n\n\u041f\u043e\u043b\u044f:\n    - command (str): \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b.\n    - name (str): \u0418\u043c\u044f \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430.\n    - output (str): \u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b ifconfig \u0438\u043b\u0438 ipconfig.\n</code></pre> serializers.py<pre><code>class CommandsResultSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CommandsResult\n        fields = ['command', 'name', 'output']\n</code></pre>"},{"location":"page2/#urls","title":"\u0424\u0430\u0439\u043b urls \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<pre><code>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 URL-\u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 (ViewSet).\nDefaultRouter \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0434\u043b\u044f REST API.\n\n\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0438\u043c\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d URL. \n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 \u0438\u043c\u0435\u043d URL \u0438 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u043e\u0432.\n\n\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 ViewSet `SystemCommands` \u0432 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0435 \u0441 \u0431\u0430\u0437\u043e\u0432\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c 'ifconfig-apps'.\n\u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0434\u043b\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 CRUD \n(\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u0447\u0442\u0435\u043d\u0438\u0435, \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435) \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 `Ifconfig`.\n\n\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 ViewSet `SystemCommands` \u0432 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0435 \u0441 \u0431\u0430\u0437\u043e\u0432\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c 'touchfile-apps'.\n\u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0434\u043b\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 CRUD \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 `Touchfile`.\n\n\u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 `urlpatterns`.\n\u042d\u0442\u0438 URL-\u043f\u0430\u0442\u0442\u0435\u0440\u043d\u044b \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 URL-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\n</code></pre> urls.py<pre><code>from rest_framework.routers import DefaultRouter\n\nfrom apps.views import SystemCommands\n\n\nrouter = DefaultRouter()\napp_name = 'apps'\nrouter.register(r'systemcommands', SystemCommands, basename='ifconfig-apps')\nrouter.register(r'systemcommands', SystemCommands, basename='touchfile-apps')\nurlpatterns = router.urls\n</code></pre>"},{"location":"page2/#views","title":"\u0424\u0430\u0439\u043b views \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<pre><code>\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0447\u0435\u0440\u0435\u0437 HTTP \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u0434\u0435\u0441\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u043a\u043e\u043c\u0430\u043d\u0434\u044b ifconfig \u0438 touchfile.\n- ifconfig \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0430\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u0445.\n\n- touchfile \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b.\n</code></pre> views.py<pre><code>from rest_framework import viewsets\nfrom rest_framework.response import Response\nfrom rest_framework.decorators import action\nfrom rest_framework import status\nfrom .models import CommandsResult\nfrom .serializers import CommandsResultSerializer\nimport subprocess\nimport platform\n\n\ndef execute_command(command):\n    \"\"\"\n    \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0435 \u0432\u044b\u0432\u043e\u0434.\n\n    Args:\n        command (str): \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n\n    Returns:\n        str: \u0412\u044b\u0432\u043e\u0434 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438\u043b\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u0443\u0434\u0430\u0447\u0438.\n\n    Raises:\n        subprocess.CalledProcessError: \u0415\u0441\u043b\u0438 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430.\n\n    Notes:\n        \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u043a\u0443 cp866 \u0434\u043b\u044f \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b.\n        \u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0443\u043b\u044c subprocess.\n    \"\"\"\n    try:\n        # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c subprocess.run \u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\n        result = subprocess.run(command, shell=True, capture_output=True, text=True, check=True, encoding='cp866')\n        return result.stdout\n    except subprocess.CalledProcessError as e:\n        return f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b: {e}\"\n</code></pre> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435(\u0412 \u043c\u043e\u0451\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435):</p> <p>curl -X POST -H \"Content-Type: application/json\" -d \"{\\\"command\\\": \\\"ifconfig\\\"}\" http://127.0.0.1:8000/apps/systemcommands/ifconfig/</p> <p>\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>ifconfig</code> \u0438\u043b\u0438 <code>ipconfig</code> (\u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041e\u0421) \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</p> <p>curl -X POST -H \"Content-Type: application/json\" -d \"{\\\"filename\\\": \\\"Hello.json\\\"}\" http://127.0.0.1:8000/apps/systemcommands/touchfile/</p> <p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.</p> views.py<pre><code>class SystemCommands(viewsets.ViewSet):\n    \"\"\"\n    ViewSet \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434.\n\n    \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a `ifconfig` (\u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430\u0445) \u0438 `touchfile` (\u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u043e\u0432).\n    \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n    **\u041c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445:**\n    \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c `CommandsResult` \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434\u0430\u0445.\n    \"\"\"\n    queryset = CommandsResult.objects.all()\n    serializer_class = CommandsResultSerializer\n\n    @action(detail=False, methods=['post'], url_path='ifconfig')\n    def command_ifconfig(self, request):\n        \"\"\"\n        \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c \u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b.\n\n        Args:\n            request: \u0417\u0430\u043f\u0440\u043e\u0441 HTTP.\n\n        Returns:\n            Response: HTTP-\u043e\u0442\u0432\u0435\u0442 \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438.\n\n        Raises:\n            ValidationError: \u0415\u0441\u043b\u0438 \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 `command`.\n        \"\"\"\n        command = request.data.get('command')\n        if command != 'ifconfig':\n            return Response({'error': '\u041d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430'}, status=status.HTTP_400_BAD_REQUEST)\n\n        # \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u041e\u0421\n        system_command = 'ipconfig' if platform.system() == 'Windows' else 'ifconfig'\n\n        output = execute_command(system_command)\n        ifconfig_instance = CommandsResult.objects.create(name=command, output=output)\n        serializer = CommandsResultSerializer(ifconfig_instance)\n        return Response(serializer.data, status=status.HTTP_201_CREATED)\n\n    @action(detail=False, methods=['post'], url_path='touchfile')\n    def command_touchfile(self, request):\n        \"\"\"\n        \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0444\u0430\u0439\u043b \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n        Args:\n            request: HTTP \u0437\u0430\u043f\u0440\u043e\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0444\u0430\u0439\u043b\u0435.\n\n        Returns:\n            Response: HTTP \u043e\u0442\u0432\u0435\u0442 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\n\n        Raises:\n            Exception: \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0444\u0430\u0439\u043b\u0430.\n        \"\"\"\n        filename = request.data.get('filename')\n        if not filename:\n            return Response({'error': '\u0418\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e'}, status=status.HTTP_400_BAD_REQUEST)\n\n        try:\n            with open(filename, 'w') as f:\n                pass  # \u0424\u0430\u0439\u043b \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u043f\u0440\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0438\n            touchfile_instance = CommandsResult.objects.create(name='touchfile', output=f\"\u0424\u0430\u0439\u043b {filename} \u0441\u043e\u0437\u0434\u0430\u043d\")\n            serializer = CommandsResultSerializer(touchfile_instance)\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n        except Exception as e:\n            return Response({'error': f'\u041e\u0448\u0438\u0431\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0430\u0439\u043b\u0430: {e}'}, status=status.HTTP_400_BAD_REQUEST)\n</code></pre>"}]}